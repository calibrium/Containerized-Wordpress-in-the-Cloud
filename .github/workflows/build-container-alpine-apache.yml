# This is a basic workflow to help you get started with Actions

name: Build-Container-Alpine-Apache

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - 'master'
      - 'feature/*'
      - 'bugfix/*'
  pull_request:
    branches:
      - 'feature/*'
      - 'bugfix/*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      CONTAINER_NAME: 'alpine-apache-wordpress'
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(sed 's/[^a-zA-Z0-9]/-/g' <<<${GITHUB_REF#refs/heads/})"
        id: extract_branch

      #https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials for use by other steps
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Container
        id: build-image
        working-directory: Wordpress/apache
        run: 
          docker build -t $CONTAINER_NAME .

      - name: Docker tag
        run:  docker tag $CONTAINER_NAME:latest $ECR_REGISTRY/$CONTAINER_NAME:${{ steps.extract_branch.outputs.branch }}

      - name: Push to ECR
        run:  docker push $ECR_REGISTRY/$CONTAINER_NAME:${{ steps.extract_branch.outputs.branch }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          container-name: 'Wordpress'
          image: '603778680666.dkr.ecr.us-east-1.amazonaws.com/alpine-apache-wordpress:master'

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true      
